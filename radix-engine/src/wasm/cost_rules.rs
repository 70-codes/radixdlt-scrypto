use parity_wasm::elements::Instruction;
use wasm_instrument::gas_metering::MemoryGrowCost;
use wasm_instrument::gas_metering::Rules;

#[derive(Debug, Clone)]
pub struct InstructionCostRules {
    instruction_cost: u32,
    grow_memory_cost: u32,
}

impl InstructionCostRules {
    pub fn constant(instruction_cost: u32, grow_memory_cost: u32) -> Self {
        Self {
            instruction_cost,
            grow_memory_cost,
        }
    }
}

impl Rules for InstructionCostRules {
    fn instruction_cost(&self, instruction: &Instruction) -> Option<u32> {
        Some(match instruction {
            Instruction::Unreachable => self.instruction_cost,
            Instruction::Nop => self.instruction_cost,
            Instruction::Block(_) => self.instruction_cost,
            Instruction::Loop(_) => self.instruction_cost,
            Instruction::If(_) => self.instruction_cost,
            Instruction::Else => self.instruction_cost,
            Instruction::End => self.instruction_cost,
            Instruction::Br(_) => self.instruction_cost,
            Instruction::BrIf(_) => self.instruction_cost,
            Instruction::BrTable(_) => self.instruction_cost,
            Instruction::Return => self.instruction_cost,
            Instruction::Call(_) => self.instruction_cost,
            Instruction::CallIndirect(_, _) => self.instruction_cost,
            Instruction::Drop => self.instruction_cost,
            Instruction::Select => self.instruction_cost,
            Instruction::GetLocal(_) => self.instruction_cost,
            Instruction::SetLocal(_) => self.instruction_cost,
            Instruction::TeeLocal(_) => self.instruction_cost,
            Instruction::GetGlobal(_) => self.instruction_cost,
            Instruction::SetGlobal(_) => self.instruction_cost,
            Instruction::I32Load(_, _) => self.instruction_cost,
            Instruction::I64Load(_, _) => self.instruction_cost,
            Instruction::F32Load(_, _) => self.instruction_cost,
            Instruction::F64Load(_, _) => self.instruction_cost,
            Instruction::I32Load8S(_, _) => self.instruction_cost,
            Instruction::I32Load8U(_, _) => self.instruction_cost,
            Instruction::I32Load16S(_, _) => self.instruction_cost,
            Instruction::I32Load16U(_, _) => self.instruction_cost,
            Instruction::I64Load8S(_, _) => self.instruction_cost,
            Instruction::I64Load8U(_, _) => self.instruction_cost,
            Instruction::I64Load16S(_, _) => self.instruction_cost,
            Instruction::I64Load16U(_, _) => self.instruction_cost,
            Instruction::I64Load32S(_, _) => self.instruction_cost,
            Instruction::I64Load32U(_, _) => self.instruction_cost,
            Instruction::I32Store(_, _) => self.instruction_cost,
            Instruction::I64Store(_, _) => self.instruction_cost,
            Instruction::F32Store(_, _) => self.instruction_cost,
            Instruction::F64Store(_, _) => self.instruction_cost,
            Instruction::I32Store8(_, _) => self.instruction_cost,
            Instruction::I32Store16(_, _) => self.instruction_cost,
            Instruction::I64Store8(_, _) => self.instruction_cost,
            Instruction::I64Store16(_, _) => self.instruction_cost,
            Instruction::I64Store32(_, _) => self.instruction_cost,
            Instruction::CurrentMemory(_) => self.instruction_cost,
            Instruction::GrowMemory(_) => self.grow_memory_cost,
            Instruction::I32Const(_) => self.instruction_cost,
            Instruction::I64Const(_) => self.instruction_cost,
            Instruction::F32Const(_) => self.instruction_cost,
            Instruction::F64Const(_) => self.instruction_cost,
            Instruction::I32Eqz => self.instruction_cost,
            Instruction::I32Eq => self.instruction_cost,
            Instruction::I32Ne => self.instruction_cost,
            Instruction::I32LtS => self.instruction_cost,
            Instruction::I32LtU => self.instruction_cost,
            Instruction::I32GtS => self.instruction_cost,
            Instruction::I32GtU => self.instruction_cost,
            Instruction::I32LeS => self.instruction_cost,
            Instruction::I32LeU => self.instruction_cost,
            Instruction::I32GeS => self.instruction_cost,
            Instruction::I32GeU => self.instruction_cost,
            Instruction::I64Eqz => self.instruction_cost,
            Instruction::I64Eq => self.instruction_cost,
            Instruction::I64Ne => self.instruction_cost,
            Instruction::I64LtS => self.instruction_cost,
            Instruction::I64LtU => self.instruction_cost,
            Instruction::I64GtS => self.instruction_cost,
            Instruction::I64GtU => self.instruction_cost,
            Instruction::I64LeS => self.instruction_cost,
            Instruction::I64LeU => self.instruction_cost,
            Instruction::I64GeS => self.instruction_cost,
            Instruction::I64GeU => self.instruction_cost,
            Instruction::F32Eq => self.instruction_cost,
            Instruction::F32Ne => self.instruction_cost,
            Instruction::F32Lt => self.instruction_cost,
            Instruction::F32Gt => self.instruction_cost,
            Instruction::F32Le => self.instruction_cost,
            Instruction::F32Ge => self.instruction_cost,
            Instruction::F64Eq => self.instruction_cost,
            Instruction::F64Ne => self.instruction_cost,
            Instruction::F64Lt => self.instruction_cost,
            Instruction::F64Gt => self.instruction_cost,
            Instruction::F64Le => self.instruction_cost,
            Instruction::F64Ge => self.instruction_cost,
            Instruction::I32Clz => self.instruction_cost,
            Instruction::I32Ctz => self.instruction_cost,
            Instruction::I32Popcnt => self.instruction_cost,
            Instruction::I32Add => self.instruction_cost,
            Instruction::I32Sub => self.instruction_cost,
            Instruction::I32Mul => self.instruction_cost,
            Instruction::I32DivS => self.instruction_cost,
            Instruction::I32DivU => self.instruction_cost,
            Instruction::I32RemS => self.instruction_cost,
            Instruction::I32RemU => self.instruction_cost,
            Instruction::I32And => self.instruction_cost,
            Instruction::I32Or => self.instruction_cost,
            Instruction::I32Xor => self.instruction_cost,
            Instruction::I32Shl => self.instruction_cost,
            Instruction::I32ShrS => self.instruction_cost,
            Instruction::I32ShrU => self.instruction_cost,
            Instruction::I32Rotl => self.instruction_cost,
            Instruction::I32Rotr => self.instruction_cost,
            Instruction::I64Clz => self.instruction_cost,
            Instruction::I64Ctz => self.instruction_cost,
            Instruction::I64Popcnt => self.instruction_cost,
            Instruction::I64Add => self.instruction_cost,
            Instruction::I64Sub => self.instruction_cost,
            Instruction::I64Mul => self.instruction_cost,
            Instruction::I64DivS => self.instruction_cost,
            Instruction::I64DivU => self.instruction_cost,
            Instruction::I64RemS => self.instruction_cost,
            Instruction::I64RemU => self.instruction_cost,
            Instruction::I64And => self.instruction_cost,
            Instruction::I64Or => self.instruction_cost,
            Instruction::I64Xor => self.instruction_cost,
            Instruction::I64Shl => self.instruction_cost,
            Instruction::I64ShrS => self.instruction_cost,
            Instruction::I64ShrU => self.instruction_cost,
            Instruction::I64Rotl => self.instruction_cost,
            Instruction::I64Rotr => self.instruction_cost,
            Instruction::F32Abs => self.instruction_cost,
            Instruction::F32Neg => self.instruction_cost,
            Instruction::F32Ceil => self.instruction_cost,
            Instruction::F32Floor => self.instruction_cost,
            Instruction::F32Trunc => self.instruction_cost,
            Instruction::F32Nearest => self.instruction_cost,
            Instruction::F32Sqrt => self.instruction_cost,
            Instruction::F32Add => self.instruction_cost,
            Instruction::F32Sub => self.instruction_cost,
            Instruction::F32Mul => self.instruction_cost,
            Instruction::F32Div => self.instruction_cost,
            Instruction::F32Min => self.instruction_cost,
            Instruction::F32Max => self.instruction_cost,
            Instruction::F32Copysign => self.instruction_cost,
            Instruction::F64Abs => self.instruction_cost,
            Instruction::F64Neg => self.instruction_cost,
            Instruction::F64Ceil => self.instruction_cost,
            Instruction::F64Floor => self.instruction_cost,
            Instruction::F64Trunc => self.instruction_cost,
            Instruction::F64Nearest => self.instruction_cost,
            Instruction::F64Sqrt => self.instruction_cost,
            Instruction::F64Add => self.instruction_cost,
            Instruction::F64Sub => self.instruction_cost,
            Instruction::F64Mul => self.instruction_cost,
            Instruction::F64Div => self.instruction_cost,
            Instruction::F64Min => self.instruction_cost,
            Instruction::F64Max => self.instruction_cost,
            Instruction::F64Copysign => self.instruction_cost,
            Instruction::I32WrapI64 => self.instruction_cost,
            Instruction::I32TruncSF32 => self.instruction_cost,
            Instruction::I32TruncUF32 => self.instruction_cost,
            Instruction::I32TruncSF64 => self.instruction_cost,
            Instruction::I32TruncUF64 => self.instruction_cost,
            Instruction::I64ExtendSI32 => self.instruction_cost,
            Instruction::I64ExtendUI32 => self.instruction_cost,
            Instruction::I64TruncSF32 => self.instruction_cost,
            Instruction::I64TruncUF32 => self.instruction_cost,
            Instruction::I64TruncSF64 => self.instruction_cost,
            Instruction::I64TruncUF64 => self.instruction_cost,
            Instruction::F32ConvertSI32 => self.instruction_cost,
            Instruction::F32ConvertUI32 => self.instruction_cost,
            Instruction::F32ConvertSI64 => self.instruction_cost,
            Instruction::F32ConvertUI64 => self.instruction_cost,
            Instruction::F32DemoteF64 => self.instruction_cost,
            Instruction::F64ConvertSI32 => self.instruction_cost,
            Instruction::F64ConvertUI32 => self.instruction_cost,
            Instruction::F64ConvertSI64 => self.instruction_cost,
            Instruction::F64ConvertUI64 => self.instruction_cost,
            Instruction::F64PromoteF32 => self.instruction_cost,
            Instruction::I32ReinterpretF32 => self.instruction_cost,
            Instruction::I64ReinterpretF64 => self.instruction_cost,
            Instruction::F32ReinterpretI32 => self.instruction_cost,
            Instruction::F64ReinterpretI64 => self.instruction_cost,
        })
    }

    fn memory_grow_cost(&self) -> MemoryGrowCost {
        // Memory growth is charged by the instruction
        MemoryGrowCost::Free
    }
}
