# This transaction manifest shows how a package can be published to the ledger

# ==================================================================================================
# WARNING: If you will be submitting this transaction through the Babylon wallet then you MUST
# remove the "lock_fee" instruction that you see below. Otherwise your transaction will fail. If all 
# that you are using is resim then you can safely ignore this warning.
# ==================================================================================================

# Locking 10 XRD in fees from the account component. 
CALL_METHOD 
    ComponentAddress("{account_component_address}") 
    "lock_fee"
    Decimal("10");

# Publishing a new package and setting some of its royalty and access rules.
PUBLISH_PACKAGE 
    Blob("{code_blob_hash}") 
    Blob("{abi_blob_hash}") 
    Array<Tuple>()          # Royalty Configuration
    Array<Tuple>()          # Metadata 
    Tuple(                  # Access Rules Struct
        Array<Tuple>(       # Method auth Field
            Tuple(
                Enum(
                    "Native", 
                    Enum(
                        "Method", 
                        Enum(
                            "Package", 
                            Enum("SetRoyaltyConfig")
                        )
                    )
                ), 
                Enum(
                    "AccessRule", 
                    Enum(
                        "Protected", 
                        Enum(
                            "ProofRule", 
                            Enum(
                                "Require", 
                                Enum(
                                    "StaticNonFungible", 
                                    NonFungibleAddress("{auth_badge_resource_address}", {auth_badge_non_fungible_id})
                                )
                            )
                        )
                    )
                )
            ), 
            Tuple(
                Enum(
                    "Native", 
                    Enum(
                        "Method", 
                        Enum(
                            "Package", 
                            Enum("ClaimRoyalty")
                        )
                    )
                ), 
                Enum(
                    "AccessRule", 
                    Enum(
                        "Protected", 
                        Enum(
                            "ProofRule", 
                            Enum(
                                "Require", 
                                Enum(
                                    "StaticNonFungible", 
                                    NonFungibleAddress("{auth_badge_resource_address}", {auth_badge_non_fungible_id})
                                )
                            )
                        )
                    )
                )
            ), 
            Tuple(
                Enum(
                    "Native", 
                    Enum(
                        "Method", 
                        Enum(
                            "Metadata", 
                            Enum("Set")
                        )
                    )
                ), 
                Enum(
                    "AccessRule", 
                    Enum(
                        "Protected", 
                        Enum(
                            "ProofRule", 
                            Enum(
                                "Require", 
                                Enum(
                                    "StaticNonFungible", 
                                    NonFungibleAddress("{auth_badge_resource_address}", {auth_badge_non_fungible_id})
                                )
                            )
                        )
                    )
                )
            ), 
            Tuple(
                Enum(
                    "Native", 
                    Enum(
                        "Method", 
                        Enum(
                            "Metadata", 
                            Enum("Get")
                        )
                    )
                ), 
                Enum(
                    "AccessRule", 
                    Enum("AllowAll")
                )
            )
        ), 
        Array<Tuple>(),     # Grouped Auth Field
        Enum("DenyAll"),    # Default Auth Field
        Array<Tuple>(       # Method Auth Mutability Field
            Tuple(
                Enum(
                    "Native", 
                    Enum(
                        "Method", 
                        Enum(
                            "Package", 
                            Enum("SetRoyaltyConfig")
                        )
                    )
                ), 
                Enum(
                    "Protected", 
                    Enum(
                        "ProofRule", 
                        Enum(
                            "Require", 
                            Enum(
                                "StaticNonFungible", 
                                NonFungibleAddress("{auth_badge_resource_address}", {auth_badge_non_fungible_id})
                            )
                        )
                    )
                )
            ), 
            Tuple(
                Enum(
                    "Native", 
                    Enum(
                        "Method", 
                        Enum(
                            "Package", 
                            Enum("ClaimRoyalty")
                        )
                    )
                ), 
                Enum(
                    "Protected", 
                    Enum(
                        "ProofRule", 
                        Enum(
                            "Require", 
                            Enum(
                                "StaticNonFungible", 
                                NonFungibleAddress("{auth_badge_resource_address}", {auth_badge_non_fungible_id})
                            )
                        )
                    )
                )
            ), 
            Tuple(
                Enum(
                    "Native", 
                    Enum(
                        "Method", 
                        Enum(
                            "Metadata", 
                            Enum("Set")
                        )
                    )
                ), 
                Enum(
                    "Protected", 
                    Enum(
                        "ProofRule", 
                        Enum(
                            "Require", 
                            Enum(
                                "StaticNonFungible", 
                                NonFungibleAddress("{auth_badge_resource_address}", {auth_badge_non_fungible_id})
                            )
                        )
                    )
                )
            ), 
            Tuple(
                Enum(
                    "Native", 
                    Enum(
                        "Method", 
                        Enum(
                            "Metadata", 
                            Enum("Get")
                        )
                    )
                ), 
                Enum(
                    "Protected", 
                    Enum(
                        "ProofRule", 
                        Enum(
                            "Require", 
                            Enum(
                                "StaticNonFungible", 
                                NonFungibleAddress("{auth_badge_resource_address}", {auth_badge_non_fungible_id})
                            )
                        )
                    )
                )
            )
        ), 
        Array<Tuple>(),     # Group Auth Mutability Field
        Enum("DenyAll")     # Default Auth Mutability Field
    );