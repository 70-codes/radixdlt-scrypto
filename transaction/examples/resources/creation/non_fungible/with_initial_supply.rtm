# This transaction manifest creates a new non-fungible resource with initial supply and with the 
# default auth.

# ==================================================================================================
# WARNING: If you will be submitting this transaction through the Babylon wallet then you MUST
# remove the "lock_fee" instruction that you see below. Otherwise your transaction will fail. If all 
# that you are using is resim then you can safely ignore this warning.
# ==================================================================================================

# Locking 10 XRD in fees from the account component. 
CALL_METHOD 
    Address("${account_address}") 
    "lock_fee"
    Decimal("10");

# Creating a new resource 
CREATE_NON_FUNGIBLE_RESOURCE_WITH_INITIAL_SUPPLY
    Enum<0u8>()
    Enum<NonFungibleIdType::Integer>()
    false # Track Total Supply
    Tuple(Tuple(Array<Enum>(), Array<Tuple>(), Array<Enum>()), Enum<0u8>(64u8), Array<String>())
    Map<NonFungibleLocalId, Tuple>(
        NonFungibleLocalId("${non_fungible_local_id}") => Tuple(Tuple("Hello World", Decimal("12")))
    )
    # This array of enums defines the modifiable behaviors of the resource. Each element in
    # the array defines a different resource behavior. As an example, the first element in this array
    # defines that the resource is mintable.
    Array<Enum>(Enum<ResourceAction::Mint>())
    # This map defines the authorization rules for a given role which maps to a set of methods.
    # In this example, the "minter", a role which is able to mint new tokens, is given permission
    # to everyone. This rule is also locked and permanently cant be changed.
    Map<String, Tuple>(
        "minter" => Tuple(Enum<1u8>(Enum<AccessRule::AllowAll>()), true)
    )
    Tuple(
        Map<String, Tuple>(
            "name" => Tuple(
                Enum<Option::Some>(
                    Enum<Metadata::String>("MyResource")                               # Resource Name
                ),
                true                                                                   # Locked Resource Name
            ),
            "description" => Tuple(
                Enum<Option::Some>(
                    Enum<Metadata::String>("A very innovative and important resource")    # Resource Description
                ),
                false
            )
        ),
        Map<String, Tuple>()
    )
    Enum<0u8>();

# Depositing the entirety of the initial supply of the newly created resource into our account 
# component.
CALL_METHOD
    Address("${account_address}") 
    "deposit_batch"
    Expression("ENTIRE_WORKTOP");