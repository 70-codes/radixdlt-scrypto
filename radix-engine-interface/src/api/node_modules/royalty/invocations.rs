use crate::api::types::*;
use crate::*;
use sbor::rust::collections::BTreeMap;
use sbor::rust::fmt::Debug;
use scrypto_abi::BlueprintAbi;

pub struct RoyaltyAbi;

impl RoyaltyAbi {
    pub fn blueprint_abis() -> BTreeMap<String, BlueprintAbi> {
        BTreeMap::new()
    }
}

pub const COMPONENT_ROYALTY_BLUEPRINT: &str = "ComponentRoyalty";

pub const COMPONENT_ROYALTY_SET_ROYALTY_CONFIG_IDENT: &str = "set_royalty_config";

#[derive(Debug, Clone, Eq, PartialEq, ScryptoCategorize, ScryptoEncode, ScryptoDecode)]
pub struct ComponentSetRoyaltyConfigInput {
    pub royalty_config: RoyaltyConfig,
}

pub const COMPONENT_ROYALTY_CLAIM_ROYALTY_IDENT: &str = "claim_royalty";

#[derive(Debug, Clone, Eq, PartialEq, ScryptoCategorize, ScryptoEncode, ScryptoDecode)]
pub struct ComponentClaimRoyaltyInput {}
