use crate::api::types::*;
use crate::*;
use sbor::rust::collections::BTreeMap;
use sbor::rust::fmt::Debug;
use scrypto_abi::BlueprintAbi;
use transaction_data::*;

pub struct MetadataAbi;

impl MetadataAbi {
    pub fn blueprint_abis() -> BTreeMap<String, BlueprintAbi> {
        BTreeMap::new()
    }
}

pub const METADATA_BLUEPRINT: &str = "Metadata";

pub const METADATA_CREATE_IDENT: &str = "create";

#[derive(
Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct MetadataCreateInput {
}

pub const METADATA_SET_IDENT: &str = "set";

#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct MetadataSetInput {
    pub key: String,
    pub value: String,
}

pub const METADATA_GET_IDENT: &str = "get";

#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct MetadataGetInput {
    pub key: String,
}
