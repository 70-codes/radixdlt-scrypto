use crate::api::types::*;
use crate::blueprints::resource::*;
use crate::*;
use sbor::rust::collections::BTreeMap;
use sbor::rust::fmt::Debug;
use scrypto_abi::BlueprintAbi;

pub struct AccessRulesAbi;

impl AccessRulesAbi {
    pub fn blueprint_abis() -> BTreeMap<String, BlueprintAbi> {
        BTreeMap::new()
    }
}

pub const ACCESS_RULES_BLUEPRINT: &str = "AccessRules";

pub const ACCESS_RULES_ADD_ACCESS_CHECK_IDENT: &str = "add_access_check";

#[derive(Debug, Clone, Eq, PartialEq, ScryptoCategorize, ScryptoEncode, ScryptoDecode)]
pub struct AccessRulesAddAccessCheckInput {
    pub access_rules: AccessRules,
}

pub const ACCESS_RULES_SET_METHOD_ACCESS_RULE_IDENT: &str = "set_method_access_rule";

#[derive(Debug, Clone, Eq, PartialEq, ScryptoCategorize, ScryptoEncode, ScryptoDecode)]
pub struct AccessRulesSetMethodAccessRuleInput {
    pub index: u32,
    pub key: AccessRuleKey,
    pub rule: AccessRuleEntry,
}

pub const ACCESS_RULES_SET_GROUP_ACCESS_RULE_IDENT: &str = "set_group_access_rule";

#[derive(Debug, Clone, Eq, PartialEq, ScryptoCategorize, ScryptoEncode, ScryptoDecode)]
pub struct AccessRulesSetGroupAccessRuleInput {
    pub index: u32,
    pub name: String,
    pub rule: AccessRule,
}

pub const ACCESS_RULES_SET_METHOD_MUTABILITY_IDENT: &str = "set_method_mutability";

#[derive(Debug, Clone, Eq, PartialEq, ScryptoCategorize, ScryptoEncode, ScryptoDecode)]
pub struct AccessRulesSetMethodMutabilityInput {
    pub index: u32,
    pub key: AccessRuleKey,
    pub mutability: AccessRule,
}

pub const ACCESS_RULES_SET_GROUP_MUTABILITY_IDENT: &str = "set_group_mutability";

#[derive(Debug, Clone, Eq, PartialEq, ScryptoCategorize, ScryptoEncode, ScryptoDecode)]
pub struct AccessRulesSetGroupMutabilityInput {
    pub index: u32,
    pub name: String,
    pub mutability: AccessRule,
}

pub const ACCESS_RULES_GET_LENGTH_IDENT: &str = "get_length";

#[derive(Debug, Clone, Eq, PartialEq, ScryptoCategorize, ScryptoEncode, ScryptoDecode)]
pub struct AccessRulesGetLengthInput {}
