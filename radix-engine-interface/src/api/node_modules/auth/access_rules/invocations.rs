use crate::api::ObjectModuleId;
use crate::blueprints::resource::*;
use crate::*;
#[cfg(feature = "radix_engine_fuzzing")]
use arbitrary::Arbitrary;
use radix_engine_common::data::scrypto::model::Own;
use sbor::rust::fmt::Debug;
use sbor::rust::prelude::*;

pub const ACCESS_RULES_BLUEPRINT: &str = "AccessRules";

pub const ACCESS_RULES_CREATE_IDENT: &str = "create";

#[cfg_attr(feature = "radix_engine_fuzzing", derive(Arbitrary))]
#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct AccessRulesCreateInput {
    pub owner_role: OwnerRole,
    pub roles: BTreeMap<ObjectModuleId, Roles>,
}

pub type AccessRulesCreateOutput = Own;

pub const ACCESS_RULES_SET_ROLE_IDENT: &str = "set_role";

#[cfg_attr(feature = "radix_engine_fuzzing", derive(Arbitrary))]
#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct AccessRulesSetRoleInput {
    pub module: ObjectModuleId,
    pub role_key: RoleKey,
    pub rule: AccessRule,
}

pub type AccessRulesSetRoleOutput = ();

pub const ACCESS_RULES_LOCK_ROLE_IDENT: &str = "lock_role";

#[cfg_attr(feature = "radix_engine_fuzzing", derive(Arbitrary))]
#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct AccessRulesLockRoleInput {
    pub module: ObjectModuleId,
    pub role_key: RoleKey,
}

pub type AccessRulesLockRoleOutput = ();

pub const ACCESS_RULES_SET_AND_LOCK_ROLE_IDENT: &str = "set_and_lock_role";

#[cfg_attr(feature = "radix_engine_fuzzing", derive(Arbitrary))]
#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct AccessRulesSetAndLockRoleInput {
    pub module: ObjectModuleId,
    pub role_key: RoleKey,
    pub rule: AccessRule,
}

pub type AccessRulesSetAndLockRoleOutput = ();

pub const ACCESS_RULES_GET_ROLE_IDENT: &str = "get_role";

#[cfg_attr(feature = "radix_engine_fuzzing", derive(Arbitrary))]
#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct AccessRulesGetRoleInput {
    pub module: ObjectModuleId,
    pub role_key: RoleKey,
}

pub type AccessRulesGetRoleOutput = Option<AccessRule>;
