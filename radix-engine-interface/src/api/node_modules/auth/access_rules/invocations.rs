use crate::blueprints::resource::*;
use crate::*;
use radix_engine_common::data::scrypto::model::Own;
use sbor::rust::fmt::Debug;
use sbor::rust::prelude::*;

pub const ACCESS_RULES_BLUEPRINT: &str = "AccessRules";

pub const ACCESS_RULES_CREATE_IDENT: &str = "create";

#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct AccessRulesCreateInput {
    pub roles: Roles,
    pub method_permissions: BTreeMap<MethodKey, MethodEntry>,
    pub inner_blueprint_rules: BTreeMap<String, BTreeMap<MethodKey, MethodEntry>>,
}

pub type AccessRulesCreateOutput = Own;

pub const ACCESS_RULES_UPDATE_METHOD_IDENT: &str = "update_method";

#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct AccessRulesUpdateMethod {
    pub object_key: ObjectKey,
    pub method_key: MethodKey,
    pub permission: Option<MethodPermission>,
    pub mutability: Option<RoleList>,
}

pub type AccessRulesSetMethodPermissionAndMutabilityOutput = ();

pub const ACCESS_RULES_UPDATE_ROLE_IDENT: &str = "update_role";

#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct AccessRulesUpdateRoleInput {
    pub role_key: RoleKey,
    pub rule: Option<AccessRule>,
    pub mutability: Option<(RoleList, bool)>,
}

pub type AccessRulesUpdateRoleOutput = ();

pub const ACCESS_RULES_GET_ROLE_IDENT: &str = "get_role";

#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct AccessRulesGetRoleInput {
    pub role_key: RoleKey,
}

pub type AccessRulesGetRoleOutput = Option<AccessRule>;
