use crate::blueprints::resource::*;
use crate::*;
use radix_engine_common::data::scrypto::model::Own;
use sbor::rust::fmt::Debug;
use sbor::rust::prelude::*;

pub const ACCESS_RULES_BLUEPRINT: &str = "AccessRules";

pub const ACCESS_RULES_CREATE_IDENT: &str = "create";

#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct AccessRulesCreateInput {
    pub method_permissions: BTreeMap<MethodKey, (MethodPermission, RoleList)>,
    pub authority_rules: Roles,
    pub inner_blueprint_rules:
        BTreeMap<String, (Roles, BTreeMap<MethodKey, (MethodPermission, RoleList)>)>,
}

pub type AccessRulesCreateOutput = Own;

pub const ACCESS_RULES_UPDATE_METHOD_IDENT: &str =
    "update_method";

#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct AccessRulesUpdateMethod {
    pub object_key: ObjectKey,
    pub method_key: MethodKey,
    pub permission: Option<MethodPermission>,
    pub mutability: Option<RoleList>,
}

pub type AccessRulesSetMethodPermissionAndMutabilityOutput = ();

pub const ACCESS_RULES_DEFINE_ROLE_IDENT: &str = "define_role";

#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct AccessRulesDefineRoleInput {
    pub object_key: ObjectKey,
    pub role_key: RoleKey,
    pub rule: AccessRule,
}

pub type AccessRulesDefineRoleOutput = ();

pub const ACCESS_RULES_SET_ROLE_MUTABILITY_IDENT: &str = "set_role_mutability";

#[derive(
    Debug, Clone, Eq, PartialEq, ScryptoSbor, ManifestCategorize, ManifestEncode, ManifestDecode,
)]
pub struct AccessRulesSetRoleMutabilityInput {
    pub object_key: ObjectKey,
    pub role_key: RoleKey,
    pub mutability: RoleList,
}

pub type AccessRulesSetRoleMutabilityOutput = ();
