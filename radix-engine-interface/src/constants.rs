use crate::construct_address;
use crate::model::*;

// After changing Radix Engine ID allocation, you will most likely need to update the addresses below.
//
// To obtain the new addresses, uncomment the println code in `id_allocator.rs` and
// run `cd radix-engine && cargo test -- bootstrap_receipt_should_match_constants --nocapture`.
//
// We've arranged the addresses in the order they're created in the genesis transaction.

/// The XRD resource address.
pub const RADIX_TOKEN: ResourceAddress = construct_address!(
    EntityType::Resource,
    43,
    184,
    178,
    243,
    32,
    242,
    32,
    82,
    252,
    147,
    168,
    128,
    171,
    228,
    23,
    93,
    104,
    143,
    6,
    112,
    157,
    220,
    41,
    97,
    164,
    99
);

/// The ECDSA virtual resource address.
pub const ECDSA_SECP256K1_TOKEN: ResourceAddress = construct_address!(
    EntityType::Resource,
    246,
    61,
    231,
    132,
    81,
    172,
    8,
    116,
    95,
    46,
    249,
    248,
    141,
    43,
    62,
    26,
    193,
    120,
    75,
    61,
    180,
    246,
    249,
    103,
    61,
    215
);

/// The ED25519 virtual resource address.
pub const EDDSA_ED25519_TOKEN: ResourceAddress = construct_address!(
    EntityType::Resource,
    150,
    171,
    255,
    213,
    229,
    176,
    195,
    43,
    97,
    33,
    100,
    75,
    61,
    162,
    201,
    85,
    154,
    1,
    142,
    153,
    250,
    16,
    234,
    197,
    209,
    7
);

/// The system token which allows access to system resources (e.g. setting epoch)
pub const SYSTEM_TOKEN: ResourceAddress = construct_address!(
    EntityType::Resource,
    226,
    196,
    140,
    102,
    147,
    211,
    253,
    230,
    212,
    153,
    196,
    189,
    36,
    44,
    208,
    77,
    215,
    144,
    187,
    76,
    204,
    207,
    51,
    74,
    84,
    175
);

pub const PACKAGE_TOKEN: ResourceAddress = construct_address!(
    EntityType::Resource,
    89,
    100,
    160,
    56,
    236,
    141,
    48,
    10,
    204,
    4,
    212,
    116,
    206,
    163,
    82,
    50,
    91,
    137,
    94,
    1,
    191,
    236,
    15,
    125,
    121,
    66
);

/// The address of the faucet package.
pub const FAUCET_PACKAGE: PackageAddress = construct_address!(
    EntityType::Package,
    226,
    132,
    230,
    81,
    135,
    189,
    73,
    5,
    237,
    140,
    69,
    245,
    29,
    167,
    105,
    50,
    140,
    141,
    135,
    211,
    163,
    82,
    178,
    214,
    91,
    175
);
pub const FAUCET_BLUEPRINT: &str = "Faucet";

/// The address of the account package.
pub const ACCOUNT_PACKAGE: PackageAddress = construct_address!(
    EntityType::Package,
    185,
    97,
    245,
    214,
    187,
    182,
    109,
    5,
    245,
    67,
    89,
    29,
    143,
    159,
    167,
    177,
    194,
    186,
    135,
    12,
    32,
    227,
    114,
    156,
    61,
    150
);
pub const ACCOUNT_BLUEPRINT: &str = "Account";

/// The address of the faucet component, test network only.
pub const FAUCET_COMPONENT: ComponentAddress = construct_address!(
    EntityType::NormalComponent,
    113,
    179,
    235,
    101,
    238,
    110,
    3,
    172,
    128,
    140,
    185,
    116,
    251,
    175,
    151,
    172,
    131,
    26,
    147,
    148,
    218,
    207,
    211,
    218,
    56,
    107
);

pub const EPOCH_MANAGER: ComponentAddress = construct_address!(
    EntityType::EpochManager,
    130,
    47,
    77,
    13,
    99,
    236,
    176,
    88,
    31,
    204,
    135,
    236,
    252,
    237,
    77,
    41,
    28,
    186,
    32,
    98,
    152,
    62,
    7,
    79,
    170,
    105
);

pub const CLOCK: ComponentAddress = construct_address!(
    EntityType::Clock,
    234,
    179,
    239,
    19,
    250,
    229,
    160,
    188,
    178,
    152,
    196,
    66,
    133,
    204,
    37,
    144,
    243,
    45,
    76,
    85,
    249,
    85,
    205,
    212,
    31,
    23
);
